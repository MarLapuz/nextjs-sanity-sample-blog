{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michael.lapuz\\\\Downloads\\\\Projects\\\\my-blog\\\\web\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport groq from 'groq';\nimport client from '../../client';\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    \"name\": author->name,\n    \"categories\": categories[]->title\n}`;\n\nconst Post = props => {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories\n  } = props;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, categories.map(category => __jsx(\"li\", {\n    key: category,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, category))));\n};\n\nPost.getInitialProps = async function (context) {\n  const {\n    slug = ''\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/michael.lapuz/Downloads/Projects/my-blog/web/pages/post/[slug].js"],"names":["groq","client","query","Post","props","title","name","categories","map","category","getInitialProps","context","slug","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,KAAK,GAAGF,IAAM;;;;EAApB;;AAMA,MAAMG,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM;AAAEC,IAAAA,KAAK,GAAG,eAAV;AAA2BC,IAAAA,IAAI,GAAG,cAAlC;AAAkDC,IAAAA;AAAlD,MAAiEH,KAAvE;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,EAGKC,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IAAI;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,QAApB,CAA3B,CADL,CAJR,CADJ;AAWH,CAbD;;AAeAN,IAAI,CAACO,eAAL,GAAuB,gBAAeC,OAAf,EAAwB;AAC3C,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACT,KAA9B;AACA,SAAO,MAAMD,MAAM,CAACY,KAAP,CAAaX,KAAb,EAAoB;AAACU,IAAAA;AAAD,GAApB,CAAb;AACH,CAHD;;AAKA,eAAeT,IAAf","sourcesContent":["import groq from 'groq'\r\nimport client from '../../client'\r\n\r\nconst query = groq `*[_type == \"post\" && slug.current == $slug][0]{\r\n    title,\r\n    \"name\": author->name,\r\n    \"categories\": categories[]->title\r\n}`\r\n\r\nconst Post = (props) => {\r\n    const { title = 'Missing title', name = 'Missing name', categories } = props\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <span>By {name}</span>\r\n            {categories && (\r\n                <ul>\r\n                    {categories.map(category => <li key={category}>{category}</li>)}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n    const { slug = '' } = context.query\r\n    return await client.fetch(query, {slug})\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}