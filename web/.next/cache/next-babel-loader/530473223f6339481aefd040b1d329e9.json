{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\michael.lapuz\\\\Downloads\\\\Projects\\\\my-blog\\\\web\\\\pages\\\\post\\\\[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n    title,\\n    \\\"name\\\": author->name,\\n    category\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport client from '../../client';\nvar query = groq(_templateObject());\n\nvar urlFor = function urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n};\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name,\n      categories = props.categories,\n      authorImage = props.authorImage;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, title), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, categories.map(function (category) {\n    return __jsx(\"li\", {\n      key: category,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, category);\n  })));\n};\n\nPost.getInitialProps = function _callee(context) {\n  var _context$query$slug, slug;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? '' : _context$query$slug;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(client.fetch(query, {\n            slug: slug\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/michael.lapuz/Downloads/Projects/my-blog/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","client","query","urlFor","source","image","Post","props","title","name","categories","authorImage","map","category","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,KAAK,GAAGH,IAAH,mBAAX;;AAMA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,MAAM,EAAI;AACrB,SAAOJ,eAAe,CAACC,MAAD,CAAf,CAAwBI,KAAxB,CAA8BD,MAA9B,CAAP;AACH,CAFD;;AAIA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,qBAMhBA,KANgB,CAEhBC,KAFgB;AAAA,MAEhBA,KAFgB,6BAER,eAFQ;AAAA,oBAMhBD,KANgB,CAGhBE,IAHgB;AAAA,MAGhBA,IAHgB,4BAGT,cAHS;AAAA,MAIhBC,UAJgB,GAMhBH,KANgB,CAIhBG,UAJgB;AAAA,MAKhBC,WALgB,GAMhBJ,KANgB,CAKhBI,WALgB;AAQpB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,EAGKC,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,CAACE,GAAX,CAAe,UAAAC,QAAQ;AAAA,WAAI;AAAI,MAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,QAApB,CAAJ;AAAA,GAAvB,CADL,CAJR,CADJ;AAYH,CApBD;;AAsBAP,IAAI,CAACQ,eAAL,GAAuB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCACGA,OAAO,CAACb,KADX,CACXc,IADW,EACXA,IADW,oCACJ,EADI;AAAA;AAAA,2CAENf,MAAM,CAACgB,KAAP,CAAaf,KAAb,EAAoB;AAACc,YAAAA,IAAI,EAAJA;AAAD,WAApB,CAFM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAKA,eAAeV,IAAf","sourcesContent":["import groq from 'groq'\r\nimport imageUrlBuilder from '@sanity/image-url'\r\nimport client from '../../client'\r\n\r\nconst query = groq `*[_type == \"post\" && slug.current == $slug][0]{\r\n    title,\r\n    \"name\": author->name,\r\n    category\r\n}`\r\n\r\nconst urlFor = source => {\r\n    return imageUrlBuilder(client).image(source)\r\n}\r\n\r\nconst Post = (props) => {\r\n    const {\r\n        title = 'Missing title',\r\n        name = 'Missing name',\r\n        categories,\r\n        authorImage\r\n    } = props\r\n\r\n    return (\r\n        <div>\r\n            <h1>{title}</h1>\r\n            <span>By {name}</span>\r\n            {categories && (\r\n                <ul>\r\n                    {categories.map(category => <li key={category}>{category}</li>)}\r\n                </ul>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nPost.getInitialProps = async function(context) {\r\n    const { slug = '' } = context.query\r\n    return await client.fetch(query, {slug})\r\n}\r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}