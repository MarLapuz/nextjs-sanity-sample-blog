{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\michael.lapuz\\\\Downloads\\\\Projects\\\\my-blog\\\\web\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        *[_type == \\\"post\\\" && _createdAt < now()]|order(_createdAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nvar Index = function Index(props) {\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), console.log(props), posts.map(function (post, i) {\n    return __jsx(\"li\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/post/[slug]\",\n      as: \"/post/\".concat(post.slug.current),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, post.title, \" \", new Date(post._updatedAt).toDateString())));\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.fetch(groq(_templateObject())));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/michael.lapuz/Downloads/Projects/my-blog/web/pages/index.js"],"names":["Link","groq","client","Index","props","posts","console","log","map","post","i","slug","current","title","Date","_updatedAt","toDateString","getInitialProps","fetch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA,qBACEA,KADF,CACbC,KADa;AAAA,MACbA,KADa,6BACL,EADK;AAGrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAFH,EAGGC,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD,EAAOC,CAAP,EAAa;AACpB,WACI;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAA0B,MAAA,EAAE,kBAAWD,IAAI,CAACE,IAAL,CAAUC,OAArB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAACI,KAAT,OAAiB,IAAIC,IAAJ,CAASL,IAAI,CAACM,UAAd,EAA0BC,YAA1B,EAAjB,CADJ,CADJ,CADJ;AAQH,GATA,CAHH,CADF;AAiBH,CApBD;;AAsBAb,KAAK,CAACc,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPf,MAAM,CAACgB,KAAP,CAAajB,IAAb,oBADO;;AAAA;AAAA;AAAA;AACpBI,YAAAA,KADoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeF,KAAf","sourcesContent":["import Link from 'next/link'\r\nimport groq from 'groq'\r\n\r\nimport client from '../client'\r\n\r\nconst Index = (props) => {\r\n    const { posts = [] } = props\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome to a blog!</h1>\r\n        {console.log(props)}\r\n        {posts.map((post, i) => {\r\n            return (\r\n                <li key={i}>\r\n                    <Link href=\"/post/[slug]\" as={`/post/${post.slug.current}`}>\r\n                        <a>{post.title} {new Date(post._updatedAt).toDateString()}</a>\r\n\r\n                    </Link>\r\n                </li>\r\n            )\r\n        }\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n    posts: await client.fetch(groq`\r\n        *[_type == \"post\" && _createdAt < now()]|order(_createdAt desc)\r\n    `)\r\n})\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}