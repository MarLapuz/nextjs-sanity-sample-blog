{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\michael.lapuz\\\\Downloads\\\\Projects\\\\my-blog\\\\web\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nconst Index = props => {\n  const {\n    posts = []\n  } = props;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), posts.map(({\n    _id,\n    title = '',\n    slug = '',\n    _updatedAt = ''\n  }) => slug && __jsx(\"li\", {\n    key: _id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${slug.current}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, title), \"(\", new Date(_updatedAt).toDateString(), \")\"))));\n};\n\nIndex.getInitialProps = async () => ({\n  posts: await client.fetch(groq`\n        *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\n    `)\n});\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/michael.lapuz/Downloads/Projects/my-blog/web/pages/index.js"],"names":["Link","groq","client","Index","props","posts","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAM;AAAEC,IAAAA,KAAK,GAAG;AAAV,MAAiBD,KAAvB;AACJ,SACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,KAAK,CAACC,GAAN,CACG,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,KAAK,GAAG,EAAf;AAAmBC,IAAAA,IAAI,GAAG,EAA1B;AAA8BC,IAAAA,UAAU,GAAG;AAA3C,GAAD,KACAD,IAAI,IACA;AAAI,IAAA,GAAG,EAAEF,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQE,IAAI,CAACE,OAAQ,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAJ,CADJ,OAEM,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAFN,MADJ,CAHP,CAFH,CADN;AAgBC,CAlBD;;AAoBAV,KAAK,CAACW,eAAN,GAAwB,aAAa;AACjCT,EAAAA,KAAK,EAAE,MAAMH,MAAM,CAACa,KAAP,CAAad,IAAK;;KAAlB;AADoB,CAAb,CAAxB;;AAMA,eAAeE,KAAf","sourcesContent":["import Link from 'next/link'\r\nimport groq from 'groq'\r\n\r\nimport client from '../client'\r\n\r\nconst Index = (props) => {\r\n    const { posts = [] } = props\r\nreturn (\r\n      <div>\r\n        <h1>Welcome to a blog!</h1>\r\n        {posts.map(\r\n            ({ _id, title = '', slug = '', _updatedAt = ''}) =>\r\n            slug && (\r\n                <li key={_id}>\r\n                    <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                        <a>{title}</a>\r\n                        ({new Date(_updatedAt).toDateString()})\r\n                    </Link>\r\n                </li>\r\n            )\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n    posts: await client.fetch(groq`\r\n        *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\r\n    `)\r\n})\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}