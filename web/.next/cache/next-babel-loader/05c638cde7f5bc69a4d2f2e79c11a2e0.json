{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\michael.lapuz\\\\Downloads\\\\Projects\\\\my-blog\\\\web\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        *[_type == \\\"post\\\" && _createdAt < now()]|order(_createdAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Link from 'next/link';\nimport groq from 'groq';\nimport client from '../client';\n\nvar Index = function Index(props) {\n  // const { posts = [] } = props\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Welcome to a blog!\"), console.log(props));\n};\n\nIndex.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(client.fetch(groq(_templateObject())));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/michael.lapuz/Downloads/Projects/my-blog/web/pages/index.js"],"names":["Link","groq","client","Index","props","console","log","getInitialProps","fetch","posts"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAFH,CADF;AAiBH,CApBD;;AAsBAD,KAAK,CAACI,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACPL,MAAM,CAACM,KAAP,CAAaP,IAAb,oBADO;;AAAA;AAAA;AAAA;AACpBQ,YAAAA,KADoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAeN,KAAf","sourcesContent":["import Link from 'next/link'\r\nimport groq from 'groq'\r\n\r\nimport client from '../client'\r\n\r\nconst Index = (props) => {\r\n    // const { posts = [] } = props\r\n\r\n    return (\r\n      <div>\r\n        <h1>Welcome to a blog!</h1>\r\n        {console.log(props)}\r\n        {/* {props.posts.map(\r\n            ({ _id, title = '', slug = '', _updatedAt = ''}) =>\r\n            slug && (\r\n                <li key={_id}>\r\n                    <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                        <a>{title}</a>\r\n                        ({new Date(_updatedAt).toDateString()})\r\n                    </Link>\r\n                </li>\r\n            )\r\n        )} */}\r\n      </div>\r\n    )\r\n}\r\n\r\nIndex.getInitialProps = async () => ({\r\n    posts: await client.fetch(groq`\r\n        *[_type == \"post\" && _createdAt < now()]|order(_createdAt desc)\r\n    `)\r\n})\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}